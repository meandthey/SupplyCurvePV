scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 1000), ylim = c(1, 30000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 31000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 40000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, aes(slope = sl, intercept = int, colour = Type, linetype = 2)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, size = 3, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 2, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 1.5, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 1.2, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 1.1, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.5, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 30))
setwd("C:/Users/DESKTOP/Desktop/[논문] 태양광 공급곡선/SupplyCurvePV/R")
setwd("C:/Users/DESKTOP/Desktop/[논문] 태양광 공급곡선/SupplyCurvePV/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
thous <- 10^(3)
mil <- 10^(6)
## 전국태양광발전소전기사업허가정보표준데이터-20240628.xlsx
# 설비용량, 설비면적 둘다 숫자 있는 것중에 가능한 샘플은 아래와 같음.
# 기타: 1279
# 옥외: 2390
# 옥상: 5207
# 건물일체형 : 4
# 주차장: 25
rawData <- readxl::read_excel("../data/전국태양광발전소전기사업허가정보표준데이터-20240813.xlsx", sheet = '데이터', skip = 0, col_names = T) %>%
mutate(설비용량 = as.numeric(설비용량),
설치면적 = as.numeric(설치면적))## 전국: 50,000개
allprvData <- rawData %>%
filter(!is.na(설치면적),
!is.na(설비용량)) %>%
filter(설치상세위치구분명 == "옥외" |
설치상세위치구분명 == "옥상" ) %>%
mutate(coef = 설치면적 / 설비용량) %>%
select(소재지도로명주소, 소재지지번주소, 설치상세위치구분명, 설비용량, 설치면적, coef) %>%
arrange(coef) %>%
mutate(ID = c(1:nrow(.))) %>%
filter(ID > 24 & ID < 2322)
##### Log10 Scale #####
allprvData %>%
filter(설치상세위치구분명 == "옥외") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
allprvData %>%
filter(설치상세위치구분명 == "옥상") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
averageLine_Log10 <- data.frame(sl = c(1.4834, 1.4336),
int = c(0,0),
Type = c("옥외", "옥상"))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 30))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
allprvData
allprvData
allprvData <- rawData %>%
filter(!is.na(설치면적),
!is.na(설비용량)) %>%
filter(설치상세위치구분명 == "옥외" |
설치상세위치구분명 == "옥상" ) %>%
mutate(coef = 설치면적 / 설비용량) %>%
select(소재지도로명주소, 소재지지번주소, 설치상세위치구분명, 설비용량, 설치면적, coef) %>%
arrange(coef) %>%
mutate(ID = c(1:nrow(.))) %>%
filter(ID > 24 & ID < 2322) %>%
mutate(설치상세위치구분명 = case_when(
설치상세위치구분명 == "옥외" ~ "Ground-mounted PV",
설치상세위치구분명 == "옥상" ~ "Roof-top PV"
))
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
thous <- 10^(3)
mil <- 10^(6)
## 전국태양광발전소전기사업허가정보표준데이터-20240628.xlsx
# 설비용량, 설비면적 둘다 숫자 있는 것중에 가능한 샘플은 아래와 같음.
# 기타: 1279
# 옥외: 2390
# 옥상: 5207
# 건물일체형 : 4
# 주차장: 25
rawData <- readxl::read_excel("../data/전국태양광발전소전기사업허가정보표준데이터-20240813.xlsx", sheet = '데이터', skip = 0, col_names = T) %>%
mutate(설비용량 = as.numeric(설비용량),
설치면적 = as.numeric(설치면적))## 전국: 50,000개
allprvData <- rawData %>%
filter(!is.na(설치면적),
!is.na(설비용량)) %>%
filter(설치상세위치구분명 == "옥외" |
설치상세위치구분명 == "옥상" ) %>%
mutate(coef = 설치면적 / 설비용량) %>%
select(소재지도로명주소, 소재지지번주소, 설치상세위치구분명, 설비용량, 설치면적, coef) %>%
arrange(coef) %>%
mutate(ID = c(1:nrow(.))) %>%
filter(ID > 24 & ID < 2322) %>%
mutate(설치상세위치구분명 = case_when(
설치상세위치구분명 == "옥외" ~ "Ground-mounted PV",
설치상세위치구분명 == "옥상" ~ "Roof-top PV"
))
##### normal Scale #####
allprvData %>%
filter(설치상세위치구분명 == "Ground-mounted PV") %>%
mutate(average = sum(설치면적)/sum(설비용량))
allprvData %>%
filter(설치상세위치구분명 == "Roof-top PV") %>%
mutate(average = sum(설치면적)/sum(설비용량))
averageLine_Normal <- data.frame(sl = c(11.5083, 7.2379),
int = c(0,0),
Type = c("Ground-mounted PV", "Roof-top PV"))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine, aes(slope = sl, intercept = int, colour = Type))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Normal, aes(slope = sl, intercept = int, colour = Type))
##### Log10 Scale #####
allprvData %>%
filter(설치상세위치구분명 == "Ground-mounted PV") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
allprvData %>%
filter(설치상세위치구분명 == "Roof-top PV") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
averageLine_Log10 <- data.frame(sl = c(1.4834, 1.4336),
int = c(0,0),
Type = c("Ground-mounted PV", "Roof-top PV"))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
##### Log10 Scale #####
allprvData %>%
filter(설치상세위치구분명 == "Ground-mounted PV") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
allprvData %>%
filter(설치상세위치구분명 == "Roof-top PV") %>%
mutate(average = sum(log10(설치면적))/sum(log10(설비용량)))
allprvData
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
allprvData %>%
filter(설치상세위치구분명 == "Ground-mounted PV") %>%
mutate(average = sum(설치면적)/sum(설비용량))
allprvData %>%
filter(설치상세위치구분명 == "Roof-top PV") %>%
mutate(average = sum(설치면적)/sum(설비용량))
setwd("C:/Users/DESKTOP/Desktop/[논문] 태양광 공급곡선/SupplyCurvePV/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(ggmacc)
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(지역 = case_when(
지역 == "가평" ~ "가평군",
지역 == "고양" ~ "고양시",
지역 == "과천" ~ "과천시",
지역 == "광명" ~ "광명시",
지역 == "광주" ~ "광주시",
지역 == "구리" ~ "구리시",
지역 == "군포" ~ "군포시",
지역 == "김포" ~ "김포시",
지역 == "남양주" ~ "남양주시",
지역 == "동두천" ~ "동두천시",
지역 == "부천" ~ "부천시",
지역 == "성남" ~ "성남시",
지역 == "수원" ~ "수원시",
지역 == "시흥" ~ "시흥시",
지역 == "안산" ~ "안산시",
지역 == "안양" ~ "안양시",
지역 == "양주" ~ "양주시",
지역 == "양평" ~ "양평군",
지역 == "여주" ~ "여주시",
지역 == "연천" ~ "연천군",
지역 == "오산" ~ "오산시",
지역 == "용인" ~ "용인시",
지역 == "의왕" ~ "의왕시",
지역 == "의정부" ~ "의정부시",
지역 == "이천" ~ "이천시",
지역 == "파주" ~ "파주시",
지역 == "평택" ~ "평택시",
지역 == "포천" ~ "포천시",
지역 == "하남" ~ "하남시",
지역 == "화성" ~ "화성시",
지역 == "안성" ~ "안성시",
TRUE ~ 지역
))
return(target)
}
# AddSthNth <- function(data) {
#
#   colnames_data <- colnames(data)
#
#   dataSthNth <- data %>%
#     mutate(지역A = case_when(
#
#       지역 %in% c(SGG_South) ~ "경기남부",
#       지역 %in% c(SGG_North) ~ "경기북부",
#       TRUE ~ 'else'
#
#     )) %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   dataTotal <- data %>%
#     mutate(지역A = "전체") %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   outputData <- data %>% bind_rows(dataSthNth, dataTotal)
#
#   return(outputData)
#
# }
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(지역, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(지역) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## capacity factor (%) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("지역")) %>%
mutate(발전용량 = 면적 / coefficient * c(ratio / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-coefficient, -ratio, -이용률, -Units)
## LCOE by technology (원/kWh) ##
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>%
rename(지역 = 시군구_1)
supplyCurve_test <- rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology")) %>%
filter(!is.na(LCOE))
supplyCurve_test_order <- supplyCurve_test %>%
arrange(desc(발전량)) %>%
arrange(LCOE)
tt <- supplyCurve_test_order %>%
mutate(x1 = lag(cumsum(발전량)),
x2 = cumsum(발전량),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1) +
facet_wrap(~유형)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
tt
tt %>%
filter(유형 =="산업단지")
tt %>%
filter(유형 =="산업단지")
tt_ind <- tt %>%
filter(유형 =="산업단지")
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt_ind, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1) +
facet_wrap(~유형)
tt %>%
filter(유형 =="물류단지")
