시군 == "양주" ~ "양주시",
시군 == "양평" ~ "양평군",
시군 == "여주" ~ "여주시",
시군 == "연천" ~ "연천군",
시군 == "오산" ~ "오산시",
시군 == "용인" ~ "용인시",
시군 == "의왕" ~ "의왕시",
시군 == "의정부" ~ "의정부시",
시군 == "이천" ~ "이천시",
시군 == "파주" ~ "파주시",
시군 == "평택" ~ "평택시",
시군 == "포천" ~ "포천시",
시군 == "하남" ~ "하남시",
시군 == "화성" ~ "화성시",
시군 == "안성" ~ "안성시",
TRUE ~ 시군
))
return(target)
}
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(시군, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(시군) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## Area (m2) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
)) %>%
mutate(구 = case_when(
시군 == "부천시" ~ NA,
TRUE ~ 구
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_full <- rawData_full %>%
mutate(유형 = case_when(
유형 %in% c("공동주택아파트", "공동주택다세대연립") ~ "공동주택",
TRUE ~ 유형
))
###### 농지 Area Data Import ###### Start
#guess_encoding("../data/농지/경기도_시군구_코드.csv")
#guess_encoding("../data/농지/농지_이격거리미적용_시군구.csv")
#GG_SGG_code <- read_csv("../data/농지/경기도_시군구_코드.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
GG_SGG_code <- read_csv("../data/농지/SGG_code.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
rawData_AgriArea_NoSB <- read_csv("../data/농지/농지_이격거리미적용_시군구.csv",  col_names = T)
rawData_AgriArea_YesSB <- read_csv("../data/농지/농지_이격거리적용_시군구.csv",  col_names = T)
AgriArea_NoSB <- rawData_AgriArea_NoSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(이격거리 = "N")
AgriArea_YesSB <- rawData_AgriArea_YesSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(이격거리 = "Y")
AgriArea <- AgriArea_NoSB %>%
bind_rows(AgriArea_YesSB)
AgriArea_trmd <- AgriArea %>%
left_join(GG_SGG_code, by = c("ADM_SECT_C" = "구_code")) %>%
mutate(유형 = '농지',
technology = 'grdmtd_PV',
ID = c(1:nrow(.))) %>%
rename(면적 = rearea_02 ) %>%
select(유형, technology, ID, 시군, 구, 면적, 이격거리) %>%
mutate(구 = case_when(
시군 == "부천시" ~ NA,
TRUE ~ 구
))
###### 농지 Area Data Import ###### End
rawData_full <- rawData_full %>%
bind_rows(AgriArea_trmd)
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("시군")) %>%
mutate(발전용량 = 면적 / DensityFactor * c(AreaFactor / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-DensityFactor, -AreaFactor, -이용률, -Units)
## LCOE by technology (원/kWh) ##
rawData_LCOE_byTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_byTech", col_names = T, skip = 1)
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T) %>%
gather(-시군, -구, -Units, key = technology, value = LCOE)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
group_by(시군, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>% ungroup()
## 모든 부지 (주차장 제외)에 LCOE join ##
rawData_fullpower_wLCOE_woParking <- rawData_fullpower %>%
filter(유형 != "주차장") %>%
left_join(rawData_LCOE_bySGGTech, by = c("시군", "구", "technology")) %>%
select(-Units) %>%
## 육상정수역은 수상태양광 LCOE 값 하나로 모두 통일.
mutate(LCOE = case_when(
유형 == "육상정수역" ~ rawData_LCOE_byTech %>% filter(technology == 'flt_PV') %>% pull(LCOE),
TRUE ~ LCOE
))
## 주차장 부지에 LCOE join ##
rawData_fullpower_wLCOE_Parking <- rawData_fullpower %>%
filter(유형 == "주차장") %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("시군", "technology")) %>%
select(-Units)
rawData_fullpower_wLCOE <- rawData_fullpower_wLCOE_woParking %>%
bind_rows(rawData_fullpower_wLCOE_Parking)
### Making Summary Table ### by LandType
rawData_fullpower_wLCOE_forTable_byLandType <- rawData_fullpower_wLCOE %>%
mutate(TC = 발전량 * LCOE) %>%
group_by(유형, 이격거리) %>%
summarize(면적 = sum(면적),
발전용량 = sum(발전용량),
발전량 = sum(발전량),
TC = sum(TC)) %>% ungroup() %>%
mutate(avgLCOE = TC/발전량) %>%
mutate(면적 = 면적/10^(6), # m2 to km2
발전용량 = 발전용량/10^(6), # kW to GW
발전량 = 발전량 / 10^(9),   # kWh to TWh
TC = TC / exRate / 10^(6),  # Won to Mil.USD
avgLCOE = avgLCOE / exRate) # Won to USD
### Making Summary Table ### by Total
rawData_fullpower_wLCOE_forTable_byTotal <- rawData_fullpower_wLCOE_forTable_byLandType %>%
group_by(이격거리) %>%
summarize(면적 = sum(면적),
발전용량 = sum(발전용량),
발전량 = sum(발전량),
TC = sum(TC)) %>% ungroup() %>%
mutate(avgLCOE = TC / 발전량) %>%
mutate(유형 = '전체', .before = 이격거리)
rawData_fullpower_wLCOE_forTable <- rawData_fullpower_wLCOE_forTable_byLandType %>%
bind_rows(rawData_fullpower_wLCOE_forTable_byTotal)
summary_byLandType_forTable_NoSB <- rawData_fullpower_wLCOE_forTable %>%
filter(이격거리 =="N")
summary_byLandType_forTable_YesSB <- rawData_fullpower_wLCOE_forTable %>%
filter(이격거리 =="Y")
summary_byLandType_forTable_NoSB
summary_byLandType_forTable_YesSB
finalSummary_byLandType_forTable <- summary_byLandType_forTable_NoSB %>%
left_join(summary_byLandType_forTable_YesSB, by = c("유형")) %>%
mutate(면적_diff = 면적.y - 면적.x,
면적_diffR = 100 * c(면적_diff / 면적.x),
발전용량_diff = 발전용량.y - 발전용량.x,
발전용량_diffR = 100 * c(발전용량_diff / 발전용량.x),
발전량_diff = 발전량.y - 발전량.x,
발전량_diffR = 100 * c(발전량_diff / 발전량.x),
TC_diff = TC.y - TC.x,
TC_diffR = 100 * c(TC_diff / TC.x),
avgLCOE_diff = avgLCOE.y - avgLCOE.x,
avgLCOE_diffR = 100 * c(avgLCOE_diff / avgLCOE.x)) %>%
select(유형,
면적.x, 면적.y, 면적_diff, 면적_diffR,
발전용량.x, 발전용량.y, 발전용량_diff, 발전용량_diffR,
발전량.x, 발전량.y, 발전량_diff, 발전량_diffR,
TC.x, TC.y, TC_diff, TC_diffR,
avgLCOE.x, avgLCOE.y, avgLCOE_diff, avgLCOE_diffR) %>%
arrange(발전용량.x)
finalSummary_byLandType_forTable
write.csv(finalSummary_byLandType_forTable, "finalSummary_byLandType_forTable.csv")
setwd("C:/Users/DESKTOP/Desktop/[논문] 태양광 공급곡선/SupplyCurvePV/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
#library(ggmacc)
exRate <- 1300
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(시군 = case_when(
시군 == "가평" ~ "가평군",
시군 == "고양" ~ "고양시",
시군 == "과천" ~ "과천시",
시군 == "광명" ~ "광명시",
시군 == "광주" ~ "광주시",
시군 == "구리" ~ "구리시",
시군 == "군포" ~ "군포시",
시군 == "김포" ~ "김포시",
시군 == "남양주" ~ "남양주시",
시군 == "동두천" ~ "동두천시",
시군 == "부천" ~ "부천시",
시군 == "성남" ~ "성남시",
시군 == "수원" ~ "수원시",
시군 == "시흥" ~ "시흥시",
시군 == "안산" ~ "안산시",
시군 == "안양" ~ "안양시",
시군 == "양주" ~ "양주시",
시군 == "양평" ~ "양평군",
시군 == "여주" ~ "여주시",
시군 == "연천" ~ "연천군",
시군 == "오산" ~ "오산시",
시군 == "용인" ~ "용인시",
시군 == "의왕" ~ "의왕시",
시군 == "의정부" ~ "의정부시",
시군 == "이천" ~ "이천시",
시군 == "파주" ~ "파주시",
시군 == "평택" ~ "평택시",
시군 == "포천" ~ "포천시",
시군 == "하남" ~ "하남시",
시군 == "화성" ~ "화성시",
시군 == "안성" ~ "안성시",
TRUE ~ 시군
))
return(target)
}
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(시군, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(시군) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## Area (m2) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
)) %>%
mutate(구 = case_when(
시군 == "부천시" ~ NA,
TRUE ~ 구
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_full <- rawData_full %>%
mutate(유형 = case_when(
유형 %in% c("공동주택아파트", "공동주택다세대연립") ~ "공동주택",
TRUE ~ 유형
))
###### 농지 Area Data Import ###### Start
#guess_encoding("../data/농지/경기도_시군구_코드.csv")
#guess_encoding("../data/농지/농지_이격거리미적용_시군구.csv")
#GG_SGG_code <- read_csv("../data/농지/경기도_시군구_코드.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
GG_SGG_code <- read_csv("../data/농지/SGG_code.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
rawData_AgriArea_NoSB <- read_csv("../data/농지/농지_이격거리미적용_시군구.csv",  col_names = T)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
#library(ggmacc)
exRate <- 1300
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(시군 = case_when(
시군 == "가평" ~ "가평군",
시군 == "고양" ~ "고양시",
시군 == "과천" ~ "과천시",
시군 == "광명" ~ "광명시",
시군 == "광주" ~ "광주시",
시군 == "구리" ~ "구리시",
시군 == "군포" ~ "군포시",
시군 == "김포" ~ "김포시",
시군 == "남양주" ~ "남양주시",
시군 == "동두천" ~ "동두천시",
시군 == "부천" ~ "부천시",
시군 == "성남" ~ "성남시",
시군 == "수원" ~ "수원시",
시군 == "시흥" ~ "시흥시",
시군 == "안산" ~ "안산시",
시군 == "안양" ~ "안양시",
시군 == "양주" ~ "양주시",
시군 == "양평" ~ "양평군",
시군 == "여주" ~ "여주시",
시군 == "연천" ~ "연천군",
시군 == "오산" ~ "오산시",
시군 == "용인" ~ "용인시",
시군 == "의왕" ~ "의왕시",
시군 == "의정부" ~ "의정부시",
시군 == "이천" ~ "이천시",
시군 == "파주" ~ "파주시",
시군 == "평택" ~ "평택시",
시군 == "포천" ~ "포천시",
시군 == "하남" ~ "하남시",
시군 == "화성" ~ "화성시",
시군 == "안성" ~ "안성시",
TRUE ~ 시군
))
return(target)
}
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(시군, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(시군) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## Area (m2) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
)) %>%
mutate(구 = case_when(
시군 == "부천시" ~ NA,
TRUE ~ 구
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_full <- rawData_full %>%
mutate(유형 = case_when(
유형 %in% c("공동주택아파트", "공동주택다세대연립") ~ "공동주택",
TRUE ~ 유형
))
###### 농지 Area Data Import ###### Start
#guess_encoding("../data/농지/경기도_시군구_코드.csv")
#guess_encoding("../data/농지/농지_이격거리미적용_시군구.csv")
#GG_SGG_code <- read_csv("../data/농지/경기도_시군구_코드.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
GG_SGG_code <- read_csv("../data/농지/SGG_code.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
rawData_AgriArea_NoSB <- read_csv("../data/농지/농지_이격거리미적용_시군구.csv",  col_names = T)
rawData_AgriArea_YesSB <- read_csv("../data/농지/농지_이격거리적용_시군구.csv",  col_names = T)
AgriArea_NoSB <- rawData_AgriArea_NoSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(이격거리 = "N")
AgriArea_YesSB <- rawData_AgriArea_YesSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(이격거리 = "Y")
AgriArea <- AgriArea_NoSB %>%
bind_rows(AgriArea_YesSB)
AgriArea_trmd <- AgriArea %>%
left_join(GG_SGG_code, by = c("ADM_SECT_C" = "구_code")) %>%
mutate(유형 = '농지',
technology = 'grdmtd_PV',
ID = c(1:nrow(.))) %>%
rename(면적 = rearea_02 ) %>%
select(유형, technology, ID, 시군, 구, 면적, 이격거리) %>%
mutate(구 = case_when(
시군 == "부천시" ~ NA,
TRUE ~ 구
))
###### 농지 Area Data Import ###### End
rawData_full <- rawData_full %>%
bind_rows(AgriArea_trmd)
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("시군")) %>%
mutate(발전용량 = 면적 / DensityFactor * c(AreaFactor / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-DensityFactor, -AreaFactor, -이용률, -Units)
## LCOE by technology (원/kWh) ##
rawData_LCOE_byTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_byTech", col_names = T, skip = 1)
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T) %>%
gather(-시군, -구, -Units, key = technology, value = LCOE)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
group_by(시군, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>% ungroup()
## 모든 부지 (주차장 제외)에 LCOE join ##
rawData_fullpower_wLCOE_woParking <- rawData_fullpower %>%
filter(유형 != "주차장") %>%
left_join(rawData_LCOE_bySGGTech, by = c("시군", "구", "technology")) %>%
select(-Units) %>%
## 육상정수역은 수상태양광 LCOE 값 하나로 모두 통일.
mutate(LCOE = case_when(
유형 == "육상정수역" ~ rawData_LCOE_byTech %>% filter(technology == 'flt_PV') %>% pull(LCOE),
TRUE ~ LCOE
))
## 주차장 부지에 LCOE join ##
rawData_fullpower_wLCOE_Parking <- rawData_fullpower %>%
filter(유형 == "주차장") %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("시군", "technology")) %>%
select(-Units)
rawData_fullpower_wLCOE <- rawData_fullpower_wLCOE_woParking %>%
bind_rows(rawData_fullpower_wLCOE_Parking)
### Making Summary Table ### by LandType
rawData_fullpower_wLCOE_forTable_byLandType <- rawData_fullpower_wLCOE %>%
mutate(TC = 발전량 * LCOE) %>%
group_by(유형, 이격거리) %>%
summarize(면적 = sum(면적),
발전용량 = sum(발전용량),
발전량 = sum(발전량),
TC = sum(TC)) %>% ungroup() %>%
mutate(avgLCOE = TC/발전량) %>%
mutate(면적 = 면적/10^(6), # m2 to km2
발전용량 = 발전용량/10^(6), # kW to GW
발전량 = 발전량 / 10^(9),   # kWh to TWh
TC = TC / exRate / 10^(6),  # Won to Mil.USD
avgLCOE = avgLCOE / exRate) # Won to USD
### Making Summary Table ### by Total
rawData_fullpower_wLCOE_forTable_byTotal <- rawData_fullpower_wLCOE_forTable_byLandType %>%
group_by(이격거리) %>%
summarize(면적 = sum(면적),
발전용량 = sum(발전용량),
발전량 = sum(발전량),
TC = sum(TC)) %>% ungroup() %>%
mutate(avgLCOE = TC / 발전량) %>%
mutate(유형 = '전체', .before = 이격거리)
rawData_fullpower_wLCOE_forTable <- rawData_fullpower_wLCOE_forTable_byLandType %>%
bind_rows(rawData_fullpower_wLCOE_forTable_byTotal)
summary_byLandType_forTable_NoSB <- rawData_fullpower_wLCOE_forTable %>%
filter(이격거리 =="N")
summary_byLandType_forTable_YesSB <- rawData_fullpower_wLCOE_forTable %>%
filter(이격거리 =="Y")
# 면적: km2, 발전용량: GW, 발전량: TWh, TC: Milion USD, avgLCOE: USD/kWh
finalSummary_byLandType_forTable <- summary_byLandType_forTable_NoSB %>%
left_join(summary_byLandType_forTable_YesSB, by = c("유형")) %>%
mutate(면적_diff = 면적.y - 면적.x,
면적_diffR = 100 * c(면적_diff / 면적.x),
발전용량_diff = 발전용량.y - 발전용량.x,
발전용량_diffR = 100 * c(발전용량_diff / 발전용량.x),
발전량_diff = 발전량.y - 발전량.x,
발전량_diffR = 100 * c(발전량_diff / 발전량.x),
TC_diff = TC.y - TC.x,
TC_diffR = 100 * c(TC_diff / TC.x),
avgLCOE_diff = avgLCOE.y - avgLCOE.x,
avgLCOE_diffR = 100 * c(avgLCOE_diff / avgLCOE.x)) %>%
select(유형,
면적.x, 면적.y, 면적_diff, 면적_diffR,
발전용량.x, 발전용량.y, 발전용량_diff, 발전용량_diffR,
발전량.x, 발전량.y, 발전량_diff, 발전량_diffR,
TC.x, TC.y, TC_diff, TC_diffR,
avgLCOE.x, avgLCOE.y, avgLCOE_diff, avgLCOE_diffR) %>%
arrange(발전용량.x)
finalSummary_byLandType_forTable
write.csv(finalSummary_byLandType_forTable, "finalSummary_byLandType_forTable.csv")
write.csv(finalSummary_byLandType_forTable, "finalSummary_byLandType_forTable.csv", fileEncoding = "EUC-KR")
