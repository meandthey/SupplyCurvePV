## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(SiGun) %>% summarize(CapacityFactor = mean(CapacityFactor)) %>% ungroup() %>%
mutate(CapacityFactor = round(CapacityFactor, digit = 2),
CapacityFactor = CapacityFactor / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$CapacityFactor)
## Area (m2) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF", "setbackRegion")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(Scenario = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "No setbacks",
TRUE ~ "Setbacks"
)) %>%
mutate(Gu = case_when(
SiGun == "부천시" ~ NA,
TRUE ~ Gu
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_full <- rawData_full %>%
mutate(LandType = case_when(
LandType %in% c("공동주택아파트", "공동주택다세대연립") ~ "공동주택",
TRUE ~ LandType
))
###### 농지 Area Data Import ###### Start
#guess_encoding("../data/농지/경기도_시군구_코드.csv")
#guess_encoding("../data/농지/농지_이격거리미적용_시군구.csv")
#GG_SGG_code <- read_csv("../data/농지/경기도_시군구_코드.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
GG_SGG_code <- read_csv("../data/농지/SGG_code.csv",  col_names = T, locale = locale(encoding = "EUC-KR"))
rawData_AgriArea_NoSB <- read_csv("../data/농지/농지_이격거리미적용_시군구.csv",  col_names = T)
rawData_AgriArea_YesSB <- read_csv("../data/농지/농지_이격거리적용_시군구.csv",  col_names = T)
AgriArea_NoSB <- rawData_AgriArea_NoSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(Scenario = "No setbacks")
AgriArea_YesSB <- rawData_AgriArea_YesSB %>%
select(rearea_02, ADM_SECT_C) %>%
mutate(Scenario = "Setbacks")
AgriArea <- AgriArea_NoSB %>%
bind_rows(AgriArea_YesSB)
# trmd: trimmed
AgriArea_trmd <- AgriArea %>%
left_join(GG_SGG_code, by = c("ADM_SECT_C" = "구_code")) %>%
mutate(LandType = '농지',
Technology = 'grdmtd_PV',
ID = c(1:nrow(.))) %>%
rename(Area = rearea_02,
SiGun = 시군,
Gu = 구) %>%
select(LandType, Technology, ID, SiGun, Gu, Area, Scenario) %>%
mutate(Gu = case_when(
SiGun == "부천시" ~ NA,
TRUE ~ Gu
))
###### 농지 Area Data Import ###### End
rawData_full <- rawData_full %>%
bind_rows(AgriArea_trmd)
##### Data Manipulation #####
# rawData_full_NoSB <- rawData_full %>%
#   filter(Scenario == "No setbacks")
#
# rawData_full_YesSB <- rawData_full %>%
#   filter(Scenario == "Setbacks")
#
# test <- rawData_full_NoSB %>%
#   left_join(rawData_full_YesSB, by = c("LandType", "Technology","SiGun", "Gu"))
#
#
#
#
#
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("LandType")) %>%
left_join(cf_bySGG, by = c("SiGun")) %>%
mutate(Capacity = Area / DensityFactor * c(AreaFactor / 100),
Generation = Capacity * CapacityFactor * 8760) %>%
select(-DensityFactor, -AreaFactor, -CapacityFactor, -Units)
## LCOE by technology (원/kWh) ##
rawData_LCOE_byTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_byTech", col_names = T, skip = 1)
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T) %>%
gather(-SiGun, -Gu, -Units, key = Technology, value = LCOE)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
group_by(SiGun, Technology, Units) %>% summarize(LCOE = mean(LCOE)) %>% ungroup()
## 모든 부지 (주차장 제외)에 LCOE join ##
rawData_fullpower_wLCOE_woParking <- rawData_fullpower %>%
filter(LandType != "주차장") %>%
left_join(rawData_LCOE_bySGGTech, by = c("SiGun", "Gu", "Technology")) %>%
select(-Units) %>%
## 육상정수역은 수상태양광 LCOE 값 하나로 모두 통일.
mutate(LCOE = case_when(
LandType == "육상정수역" ~ rawData_LCOE_byTech %>% filter(Technology == 'flt_PV') %>% pull(LCOE),
TRUE ~ LCOE
))
## 주차장 부지에 LCOE join ##
rawData_fullpower_wLCOE_Parking <- rawData_fullpower %>%
filter(LandType == "주차장") %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("SiGun", "Technology")) %>%
select(-Units)
rawData_fullpower_wLCOE <- rawData_fullpower_wLCOE_woParking %>%
bind_rows(rawData_fullpower_wLCOE_Parking)
setbackRegion <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "setbackRegion", col_names = T, skip = 0)
totalData <- rawData_fullpower_wLCOE %>%
mutate(TC = Generation * LCOE) %>%
mutate(avgLCOE = TC/Generation) %>%
mutate(Area = Area/10^(6), # m2 to km2
Capacity = Capacity/10^(6), # kW to GW
Generation = Generation / 10^(9),   # kWh to TWh
TC = TC / exRate / 10^(6),  # Won to Mil.USD
avgLCOE = avgLCOE / exRate) %>% # Won to USD
mutate(setbackRegion = case_when(
SiGun %in% setbackRegion$setbackRegion ~ 'setbackRegion',
TRUE ~ 'No setbackRegion'
))
######## Data Manipulation due to mismatch GIS data ########
totalData_woID <- totalData %>%
group_by(LandType, Technology, SiGun, Scenario, setbackRegion) %>%
summarize(Area = sum(Area),
Capacity = sum(Capacity),
Generation = sum(Generation),
TC = sum(TC)) %>% ungroup()
totalData_woID_YesSB <- totalData_woID %>%
filter(Scenario =='Setbacks')
totalData_woID_NoSB <- totalData_woID %>%
filter(Scenario =='No setbacks')
totalData_woID_YesSB_NoSB <-  totalData_woID_NoSB %>%
left_join(totalData_woID_YesSB, by = c("LandType", "Technology", "SiGun"))
totalData_woID_temp <- totalData_woID_YesSB_NoSB %>%
mutate(Area.y = case_when(
Scenario.y == 'Setbacks' & setbackRegion.y == 'No setbackRegion' ~ Area.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Area.y > Area.x ~ Area.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Area.y <= Area.x ~ Area.y,
TRUE ~ 0
)) %>%
mutate(Capacity.y = case_when(
Scenario.y == 'Setbacks' & setbackRegion.y == 'No setbackRegion' ~ Capacity.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Capacity.y > Capacity.x ~ Capacity.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Capacity.y <= Capacity.x ~ Capacity.y,
TRUE ~ 0
)) %>%
mutate(Generation.y = case_when(
Scenario.y == 'Setbacks' & setbackRegion.y == 'No setbackRegion' ~ Generation.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Generation.y > Generation.x ~ Generation.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & Generation.y <= Generation.x ~ Generation.y,
TRUE ~ 0
)) %>%
mutate(TC.y = case_when(
Scenario.y == 'Setbacks' & setbackRegion.y == 'No setbackRegion' ~ TC.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & TC.y > TC.x ~ TC.x,
Scenario.y == 'Setbacks' & setbackRegion.y == 'setbackRegion' & TC.y <= TC.x ~ TC.y,
TRUE ~ 0
)) %>%
mutate(Scenario.y = case_when(
is.na(Scenario.y) ~ 'Setbacks',
TRUE ~ Scenario.y
)) %>%
mutate(setbackRegion.y = case_when(
is.na(setbackRegion.y) ~ 'setbackRegion',
TRUE ~ setbackRegion.y
))
totalData_woID_temp_NoSB <- totalData_woID_temp %>%
select(LandType, Technology, SiGun, Scenario.x, setbackRegion.x, Area.x, Capacity.x, Generation.x, TC.x) %>%
rename(Scenario = Scenario.x,
setbackRegion = setbackRegion.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x)
totalData_woID_temp_YesSB <- totalData_woID_temp %>%
select(LandType, Technology, SiGun, Scenario.y, setbackRegion.y, Area.y, Capacity.y, Generation.y, TC.y) %>%
rename(Scenario = Scenario.y,
setbackRegion = setbackRegion.y,
Area = Area.y,
Capacity = Capacity.y,
Generation = Generation.y,
TC = TC.y)
totalData_woID_mnpt <- totalData_woID_temp_NoSB %>%
bind_rows(totalData_woID_temp_YesSB)
######################################
######## [End] Clear Data Set ########
######################################
### How much would generation be reduced by setback regulation? ### by LandType including both setback and Nosetback
totalData_woID_mnpt_NoSB <- totalData_woID_mnpt %>%
filter(Scenario == 'No setbacks')
totalData_woID_mnpt_YesSB <- totalData_woID_mnpt %>%
filter(Scenario == 'Setbacks')
totalData_woID_mnpt_Reduction <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, Scenario, Generation) # Area, TC 등 추가하면 됨
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction) %>%
group_by(LandType, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
TypeToEng() %>%
#mutate(LandType = factor(LandType, levels = c("산지", "공동주택", "농지", "산업단지", "육상정수역", "공공건축물", "물류단지", "주차장"))) %>%
# mutate(LandType = factor(LandType, levels = c("Residential complex", "Mountainous area", "Industrial complex",
#                                               "Farmland",  "Water", "Public buildings", "Logistics complex", "Parking lot"))) %>%
mutate(LandType = factor(LandType, levels = c('Residential', "Mountain", "Industrial",
"Farmland",  "Water", "Public", "Logistics", "Parking"))) %>%
mutate(Scenario = case_when(
Scenario == "Setbacks" ~ "Setback",
Scenario == "Reduction" ~ "Additional amount by repealing setback"
))
ggplot(data = graphData , aes(x =  LandType, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
totalData_woID_mnpt_Reduction_byLandType <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, Scenario, Generation) # Area, TC 등 추가하면 됨
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_byLandType) %>%
group_by(LandType, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
TypeToEng() %>%
#mutate(LandType = factor(LandType, levels = c("산지", "공동주택", "농지", "산업단지", "육상정수역", "공공건축물", "물류단지", "주차장"))) %>%
# mutate(LandType = factor(LandType, levels = c("Residential complex", "Mountainous area", "Industrial complex",
#                                               "Farmland",  "Water", "Public buildings", "Logistics complex", "Parking lot"))) %>%
mutate(LandType = factor(LandType, levels = c('Residential', "Mountain", "Industrial",
"Farmland",  "Water", "Public", "Logistics", "Parking"))) %>%
mutate(Scenario = case_when(
Scenario == "Setbacks" ~ "Setback",
Scenario == "Reduction" ~ "Additional amount by repealing setback"
))
ggplot(data = graphData , aes(x =  LandType, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
totalData_woID_mnpt_Reduction_bySGG <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(SiGun, Scenario, Area, Capacity, Generation, TC) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
graphData
totalData_woID_mnpt_YesSB
unique(totalData_woID_mnpt_YesSB$Scenario)
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup()
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange()
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(Generation)
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(Generation, descending = T)
?arrange
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(desc(Generation))
## just get the order of factors in SiGun lists.
totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(desc(Generation)) %>%
pull(SiGun)
## just get the order of factors in SiGun lists.
SGGorder_bySetbackGen <- totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(desc(Generation)) %>%
pull(SiGun)
SGGorder_bySetbackGen
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
head(graphData)
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
totalData_woID_mnpt_Reduction_bySGG
totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(SiGun, Scenario, Area, Capacity, Generation, TC)
totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x)
totalData_woID_mnpt_Reduction_bySGG <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, SiGun, Scenario, Area, Capacity, Generation, TC) %>%
group_by(LandType, SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
totalData_woID_mnpt_Reduction_bySGG
totalData_woID_mnpt_Reduction_bySGG
totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng()
totalData_woID_mnpt_YesSB
totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng()
totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng() %>%
rename(Scenario = LandType)
totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng() %>%
mutate(Scenario = LandType)
## tempData : Reduction양을 LandType별로 색을 넣으려고, Scenario 칼럼에 '공공건축물' (Resid)단어를 넣을 예정.
totalData_woID_mnpt_Reduction_bySGG_graphData <- totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng() %>%
mutate(Scenario = LandType) %>%
select(-LandType)
totalData_woID_mnpt_Reduction_bySGG_graphData
## just get the order of factors in SiGun lists.
SGGorder_bySetbackGen <- totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
arrange(desc(Generation)) %>%
pull(SiGun)
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
graphData
unique(graphData$Scenario)
unique(graphData$SiGun)
head(graphData)
unique(graphData$Scenario)
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(SCenario, levels = c("Setbacks", "Mountain", "Farmland", "Industrial", "Logistics", "Parking", "Public", "Residential", "Water")))
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = c("Setbacks", "Mountain", "Farmland", "Industrial", "Logistics", "Parking", "Public", "Residential", "Water")))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
graphData
graphData$Scenario
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = c("Mountain", "Farmland", "Industrial", "Logistics", "Parking", "Public", "Residential", "Water", "Setbacks")))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = c("Mountain", "Farmland", "Residential", "Industrial", "Logistics", "Water", "Public", "Parking", "Setbacks")))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
rev("A", "B")
rev(c("A", "B"))
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = rev(c("Setbacks", "Mountain", "Farmland", "Residential", "Industrial", "Logistics", "Water", "Public", "Parking"))))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity', color = 'black') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
