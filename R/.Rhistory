geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10')
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 8) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(trans = 'log10') +
scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
# scale_x_continuous(trans = 'log10') +
# scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
# scale_x_continuous(trans = 'log10') +
# scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 50000), ylim = c(1, 50000)) +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Normal, aes(slope = sl, intercept = int, colour = Type))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 2) +
geom_abline(data = averageLine_Normal, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 3) +
geom_abline(data = averageLine_Normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
# scale_x_continuous(trans = 'log10') +
# scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 50000), ylim = c(1, 50000)) +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
# scale_x_continuous(trans = 'log10') +
# scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 50000), ylim = c(1, 50000)) +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Log10, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
# scale_x_continuous(trans = 'log10') +
# scale_y_continuous(trans = 'log10') +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
scale_y_continuous(breaks = c(1, 10, 50, 100, 500, 1000, 5000, 10000), trans = 'log10') +
coord_cartesian(expand = FALSE,
xlim = c(1, 50000), ylim = c(1, 50000)) +
annotation_logticks()
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = allprvData, aes(x =  설비용량, y = 설치면적)) +
geom_point(aes(colour = 설치상세위치구분명), size = 5) +
geom_abline(data = averageLine_Normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
scale_x_continuous(breaks = c(0, 250, 500, 750, 1000)) +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000, 20000, 25000, 30000))
rawData <- readxl::read_excel("../data/PV설치 사례조사.xlsx", sheet = '데이터', skip = 0, col_names = T)
rawData_graphData <- rawData %>%
mutate(technology = case_when(
유형 %in% c("산단", "공동주택", "물류센터", "공공건축물") ~ "Roof-top PV",
유형 == "주차장" ~ "Ground-mounted PV (Parking lot)",
유형 == "도로IC" ~ "Ground-mounted PV (Roadside)"
))
rawData_graphData_RatioCheck <- rawData_graphData %>%
group_by(technology) %>% summarize(`설치면적(m2)` = sum(`설치면적(m2)`),
`전체면적 (m2)` = sum(`전체면적 (m2)`)) %>%
mutate(ratio = `설치면적(m2)` / `전체면적 (m2)`)
averageLine_Log10 <- data.frame(sl = c(0.744, 0.845, 0.912),
int = c(0,0,0),
Type = c("Ground-mounted PV (Parking lot)", "Ground-mounted PV (Roadside)", "Roof-top PV"))
rawData_graphData_RatioCheck <- rawData_graphData %>%
group_by(technology) %>% summarize(`설치면적(m2)` = sum(`설치면적(m2)`),
`전체면적 (m2)` = sum(`전체면적 (m2)`)) %>%
mutate(ratio = `설치면적(m2)` / `전체면적 (m2)`)
rawData_graphData_RatioCheck
averageLine_normal <- data.frame(sl = c(0.189, 0.284, 0.545),
int = c(0,0,0),
Type = c("Ground-mounted PV (Parking lot)", "Ground-mounted PV (Roadside)", "Roof-top PV"))
ggplot(data = rawData_graphData, aes(x = `전체면적 (m2)`, y = `설치면적(m2)`)) +
geom_point(aes(colour = technology), size = 5) +
#geom_abline(slope = 1, linetype = 2) +
geom_abline(data = averageLine_normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(breaks = c(50, 100, 500, 1000, 5000, 10000)) +
scale_y_continuous(breaks = c(50, 100, 500, 1000, 5000, 10000)) +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = rawData_graphData, aes(x = `전체면적 (m2)`, y = `설치면적(m2)`)) +
geom_point(aes(colour = technology), size = 5) +
#geom_abline(slope = 1, linetype = 2) +
geom_abline(data = averageLine_normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000)) +
scale_y_continuous(breaks = c(0, 1000, 5000, 10000, 20000)) +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = rawData_graphData, aes(x = `전체면적 (m2)`, y = `설치면적(m2)`)) +
geom_point(aes(colour = technology), size = 5) +
#geom_abline(slope = 1, linetype = 2) +
geom_abline(data = averageLine_normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(breaks = c(0, 1000, 5000, 10000, 20000)) +
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000)) +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = rawData_graphData, aes(x = `전체면적 (m2)`, y = `설치면적(m2)`)) +
geom_point(aes(colour = technology), size = 5) +
#geom_abline(slope = 1, linetype = 2) +
geom_abline(data = averageLine_normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(breaks = c(0, 1000, 5000, 10000, 15000)) +
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000)) +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
ggplot(data = rawData_graphData, aes(x = `전체면적 (m2)`, y = `설치면적(m2)`)) +
geom_point(aes(colour = technology), size = 5) +
#geom_abline(slope = 1, linetype = 2) +
geom_abline(data = averageLine_normal, linetype = 2, linewidth = 0.8, aes(slope = sl, intercept = int, colour = Type)) +
scale_x_continuous(breaks = c(0, 5000, 10000, 15000)) +
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000)) +
# coord_cartesian(expand = FALSE,
#                 xlim = c(1, 2000), ylim = c(1, 50000)) +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 40))
rawData_graphData_RatioCheck
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(ggmacc)
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(지역 = case_when(
지역 == "가평" ~ "가평군",
지역 == "고양" ~ "고양시",
지역 == "과천" ~ "과천시",
지역 == "광명" ~ "광명시",
지역 == "광주" ~ "광주시",
지역 == "구리" ~ "구리시",
지역 == "군포" ~ "군포시",
지역 == "김포" ~ "김포시",
지역 == "남양주" ~ "남양주시",
지역 == "동두천" ~ "동두천시",
지역 == "부천" ~ "부천시",
지역 == "성남" ~ "성남시",
지역 == "수원" ~ "수원시",
지역 == "시흥" ~ "시흥시",
지역 == "안산" ~ "안산시",
지역 == "안양" ~ "안양시",
지역 == "양주" ~ "양주시",
지역 == "양평" ~ "양평군",
지역 == "여주" ~ "여주시",
지역 == "연천" ~ "연천군",
지역 == "오산" ~ "오산시",
지역 == "용인" ~ "용인시",
지역 == "의왕" ~ "의왕시",
지역 == "의정부" ~ "의정부시",
지역 == "이천" ~ "이천시",
지역 == "파주" ~ "파주시",
지역 == "평택" ~ "평택시",
지역 == "포천" ~ "포천시",
지역 == "하남" ~ "하남시",
지역 == "화성" ~ "화성시",
지역 == "안성" ~ "안성시",
TRUE ~ 지역
))
return(target)
}
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(지역, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(지역) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## capacity factor (%) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byTech","LCOE_bySGGTech","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("지역")) %>%
mutate(발전용량 = 면적 / coefficient * c(ratio / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-coefficient, -ratio, -이용률, -Units)
## LCOE by technology (원/kWh) ##
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>%
rename(지역 = 시군구_1)
supplyCurve_test <- rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology")) %>%
filter(!is.na(LCOE))
supplyCurve_test_order <- supplyCurve_test %>%
arrange(desc(발전량)) %>%
arrange(LCOE)
tt <- supplyCurve_test_order %>%
mutate(x1 = lag(cumsum(발전량)),
x2 = cumsum(발전량),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1) +
facet_wrap(~유형)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
tt
tt
supplyCurve_test
tt
tt_ind <- tt %>%
filter(유형 =="산업단지")
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt_ind, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
unique(tt$y1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt_ind, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
supplyCurve_test_order
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=tt, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
supplyCurve_test_order
supplyCurve_test_order %>%
filter(유형 == "산업단지")
supplyCurve_test_order %>%
filter(유형 == "산업단지") %>%
mutate(x1 = lag(cumsum(발전량)),
x2 = cumsum(발전량),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ind_tt_graph <- supplyCurve_test_order %>%
filter(유형 == "산업단지") %>%
mutate(x1 = lag(cumsum(발전량)),
x2 = cumsum(발전량),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 1, linetype = 1)
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 1, linetype = 1, colour = 'black')
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, size = 0.1, linetype = 1, colour = 'black')
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, linetype = 1, colour = 'black')
ind_tt_graph
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=ind_tt_graph, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=유형), alpha=0.5, linetype = 1)
