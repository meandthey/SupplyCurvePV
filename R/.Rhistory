ID = c(1:nrow(.))) %>%
rename(Area = rearea_02,
SiGun = 시군,
Gu = 구) %>%
select(LandType, Technology, ID, SiGun, Gu, Area, Scenario) %>%
mutate(Gu = case_when(
SiGun == "부천시" ~ NA,
TRUE ~ Gu
))
rawData_full <- rawData_full %>%
bind_rows(AgriArea_trmd)
###### 농지 Area Data Import ###### End
###### 면적(Area)에 관한 fullData에 capacity, generation을 계산  ######
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("LandType")) %>%
left_join(cf_bySGG, by = c("SiGun")) %>%
mutate(Capacity = Area / DensityFactor * c(AreaFactor / 100),
Generation = Capacity * CapacityFactor * 8760) %>%
select(-DensityFactor, -AreaFactor, -CapacityFactor, -Units)
###### Area, Capacity, Generation Data에 LCOE 정보를 추가적으로 붙임  ######
## LCOE by technology (원/kWh) ##
rawData_LCOE_byTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_byTech", col_names = T, skip = 1)
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGGTech", col_names = T) %>%
gather(-SiGun, -Gu, -Units, key = Technology, value = LCOE)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
group_by(SiGun, Technology, Units) %>% summarize(LCOE = mean(LCOE)) %>% ungroup()
## 모든 부지 (주차장 제외)에 LCOE join ##
rawData_fullpower_wLCOE_woParking <- rawData_fullpower %>%
filter(LandType != "주차장") %>%
left_join(rawData_LCOE_bySGGTech, by = c("SiGun", "Gu", "Technology")) %>%
select(-Units) %>%
## 육상정수역은 수상태양광 LCOE 값 하나로 모두 통일.
mutate(LCOE = case_when(
LandType == "육상정수역" ~ rawData_LCOE_byTech %>% filter(Technology == 'flt_PV') %>% pull(LCOE),
TRUE ~ LCOE
))
## 주차장 부지에 LCOE join ## 주차장은 '구' 에 대한 정보가 없어서, '구' 가 있는 '시'의 경우 '구'들의 평균값을 '시'의 대표 값으로 설정
rawData_fullpower_wLCOE_Parking <- rawData_fullpower %>%
filter(LandType == "주차장") %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("SiGun", "Technology")) %>%
select(-Units)
rawData_fullpower_wLCOE <- rawData_fullpower_wLCOE_woParking %>%
bind_rows(rawData_fullpower_wLCOE_Parking)
## [totalData] 를 만듬
##### 31개 시군 중에 setback 규제가 있는 지역이 12개 있는데, 해당 지역을 표시 해줌.
##### TC(Total cost)를 LCOE * Generation으로 정의 및 계산
##### 각 변수별로 단위 정리 해줌.
setbackRegion <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "setbackRegion", col_names = T, skip = 0)
totalData <- rawData_fullpower_wLCOE %>%
mutate(TC = Generation * LCOE) %>%
mutate(avgLCOE = TC/Generation) %>%
mutate(Area = Area/10^(6), # m2 to km2
Capacity = Capacity/10^(6), # kW to GW
Generation = Generation / 10^(9),   # kWh to TWh
LCOE = LCOE / exRate,  # Won to USD
TC = TC / exRate / 10^(6),  # Won to Mil.USD
avgLCOE = avgLCOE / exRate) %>% # Won to USD
mutate(setbackRegion = case_when(
SiGun %in% setbackRegion$setbackRegion ~ 'setbackRegion',
TRUE ~ 'No setbackRegion'
))
##[totalData_woID_mnpt]를 만듬: 시군별로 합쳐진 data이며, 아래의 내용과 같이 maniumpate(mnpt)한 데이터임.
#### Data Manipulation due to mismatch GIS data ########
#### Setback을 적용 시키고 난 후에 오히려 면적이 더 커지는 경우는 아래와 같이 처리함. #####
###### Setback Regulation 없는 지역은, setback 있을때의 수치를, setback 없을때 data와 똑같게 만듬.
###### Setback이 있는 지역 중에 Setback 적용 이후의 면적이 더 큰 경우는 setback 있을때의 수치를, setback 없을때 data와 똑같게 만듬.(포천시 산지, 동두천시 산지)
###### Setback이 있는 지역 중에 Setback 적용 이후의 면적이 작은 경우(정상적인 경우), setback 있을때의 수치를, setback 있을때와 같게 만듬. (정상적인 현상)
###### 위의 과정은 개별부지(ID가 붙어 있는 data)에 대해서는 적용할 수 없고, 시군별로 합쳐진 데이터에 대해서만 실행할 수 있음. 왜냐면 각 부지의 ID별로 setback / No setback 변화된 수치를 알 수 없기 때문.
totalData_woID <- totalData %>%
group_by(LandType, Technology, SiGun, Scenario, setbackRegion) %>%
summarize(Area = sum(Area),
Capacity = sum(Capacity),
Generation = sum(Generation),
TC = sum(TC)) %>% ungroup()
totalData_woID_YesSB <- totalData_woID %>%
filter(Scenario =='Current Setback')
totalData_woID_NoSB <- totalData_woID %>%
filter(Scenario =='No Setback')
totalData_woID_YesSB_NoSB <-  totalData_woID_NoSB %>%
left_join(totalData_woID_YesSB, by = c("LandType", "Technology", "SiGun"))
totalData_woID_temp <- totalData_woID_YesSB_NoSB %>%
mutate(Area.y = case_when(
Scenario.y == 'Current Setback' & setbackRegion.y == 'No setbackRegion' ~ Area.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Area.y > Area.x ~ Area.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Area.y <= Area.x ~ Area.y,
TRUE ~ 0
)) %>%
mutate(Capacity.y = case_when(
Scenario.y == 'Current Setback' & setbackRegion.y == 'No setbackRegion' ~ Capacity.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Capacity.y > Capacity.x ~ Capacity.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Capacity.y <= Capacity.x ~ Capacity.y,
TRUE ~ 0
)) %>%
mutate(Generation.y = case_when(
Scenario.y == 'Current Setback' & setbackRegion.y == 'No setbackRegion' ~ Generation.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Generation.y > Generation.x ~ Generation.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & Generation.y <= Generation.x ~ Generation.y,
TRUE ~ 0
)) %>%
mutate(TC.y = case_when(
Scenario.y == 'Current Setback' & setbackRegion.y == 'No setbackRegion' ~ TC.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & TC.y > TC.x ~ TC.x,
Scenario.y == 'Current Setback' & setbackRegion.y == 'setbackRegion' & TC.y <= TC.x ~ TC.y,
TRUE ~ 0
)) %>%
mutate(Scenario.y = case_when(
is.na(Scenario.y) ~ 'Current Setback',
TRUE ~ Scenario.y
)) %>%
mutate(setbackRegion.y = case_when(
is.na(setbackRegion.y) ~ 'setbackRegion',
TRUE ~ setbackRegion.y
))
totalData_woID_temp_NoSB <- totalData_woID_temp %>%
select(LandType, Technology, SiGun, Scenario.x, setbackRegion.x, Area.x, Capacity.x, Generation.x, TC.x) %>%
rename(Scenario = Scenario.x,
setbackRegion = setbackRegion.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x)
totalData_woID_temp_YesSB <- totalData_woID_temp %>%
select(LandType, Technology, SiGun, Scenario.y, setbackRegion.y, Area.y, Capacity.y, Generation.y, TC.y) %>%
rename(Scenario = Scenario.y,
setbackRegion = setbackRegion.y,
Area = Area.y,
Capacity = Capacity.y,
Generation = Generation.y,
TC = TC.y)
totalData_woID_mnpt <- totalData_woID_temp_NoSB %>%
bind_rows(totalData_woID_temp_YesSB)
# Fig 1 #
### Making Summary Table ### by LandType
rawData_fullpower_forTable_byLandType <- totalData %>%
group_by(LandType, Scenario) %>%
summarize(Area = sum(Area),
Capacity = sum(Capacity),
Generation = sum(Generation),
TC = sum(TC)) %>% ungroup()
##### Draw total graph fill by Land ##### Fig1.
graphData <- rawData_fullpower_forTable_byLandType %>%
select(-TC) %>%
gather(key = variable, value = value, -LandType, -Scenario) %>%
TypeToEng() %>%
rename(`Land Use Type` = `LandType`)
ggplot(data = graphData %>% mutate(variable = factor(variable, levels = c("Area", "Capacity", "Generation"))), aes(x =  Scenario, y = value, fill = `Land Use Type`)) +
geom_bar(stat='identity') +
facet_wrap(~variable, scales = 'free') +
theme(legend.position = "right",
#axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 40)) +
labs(color = 'Land Use Type')
graphData_total_TEMP <- graphData %>%
group_by(Scenario, variable) %>% summarize(value = sum(value)) %>% ungroup() %>%
mutate(LandType = 'Total', .before = Scenario)
graphData_wTotal <- graphData %>%
bind_rows(graphData_total_TEMP)
Fig1_Table <- graphData_wTotal %>%
spread(key = Scenario, value = value) %>%
mutate(diffRate = 100 * c(`No Setback` - `Current Setback`) / `Current Setback`)
Fig1_Table_IndLog <- Fig1_Table %>%
filter(LandType %in% c("Industrial", "Logistics")) %>%
group_by(variable) %>% summarize(`Current Setback` = sum(`Current Setback`),
`No Setback` = sum(`No Setback`),)
totalData_woID_mnpt_NoSB <- totalData_woID_mnpt %>%
filter(Scenario == 'No Setback')
totalData_woID_mnpt_YesSB <- totalData_woID_mnpt %>%
filter(Scenario == 'Current Setback')
totalData_woID_mnpt_Reduction_byLandType <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, Scenario, Generation) # Area, TC 등 추가하면 됨
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_byLandType) %>%
group_by(LandType, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
TypeToEng() %>%
#mutate(LandType = factor(LandType, levels = c("산지", "공동주택", "농지", "산업단지", "육상정수역", "공공건축물", "물류단지", "주차장"))) %>%
# mutate(LandType = factor(LandType, levels = c("Residential complex", "Mountainous area", "Industrial complex",
#                                               "Farmland",  "Water", "Public buildings", "Logistics complex", "Parking lot"))) %>%
mutate(LandType = factor(LandType, levels = c('Residential', "Industrial", "Water", "Farmland", "Mountain",
"Public", "Logistics", "Roadside", "Parking"))) %>%
mutate(Scenario = case_when(
Scenario == "Reduction" ~ "No Setback (Addtional amount)",
TRUE ~ Scenario
)) %>%
mutate(Scenario = factor(Scenario, levels = c("No Setback (Addtional amount)", "Current Setback"))) %>%
rename(`Land Use Type` = `LandType`)
ggplot(data = graphData , aes(x =  `Land Use Type`, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Geneartion (TWh)")
graphData %>%
spread(key = Scenario, value = Generation) %>%
mutate(incRate = 100 * `No Setback (Addtional amount)` / c(`Current Setback`) )
totalData_woID_mnpt_Reduction_bySGG <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, SiGun, Scenario, Area, Capacity, Generation, TC) %>%
group_by(LandType, SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
## tempData : Reduction양을 LandType별로 색을 넣으려고, Scenario 칼럼에 '공공건축물' (Resid)단어를 넣을 예정.
totalData_woID_mnpt_Reduction_bySGG_graphData <- totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng() %>%
mutate(Scenario = LandType) %>%
select(-LandType)
## just get the order of factors in SiGun lists.
SGGorder_bySetbackGen <- totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
SGG_to_Eng() %>%
arrange(desc(Generation)) %>%
pull(SiGun)
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
SGG_to_Eng() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = rev(c("Current Setback", "Farmland", "Mountain", "Residential", "Industrial", "Water", "Logistics",  "Public", 'Roadside',"Parking"))))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity', color = 'black') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
rawData_fullpower_wLCOE_ordered_YesSB <- totalData %>%
mutate(LCOE = LCOE * 1000) %>%  # Unit : $/kWh to $/MWh
arrange(desc(Generation)) %>%
arrange(LCOE) %>%
filter(Scenario == "Current Setback") %>%
TypeToEng() %>%
mutate(LandType = factor(LandType, levels = rev(c("Industrial", "Logistics", "Residential", "Public", "Mountain", "Farmland", "Parking", "Water"))))
rawData_fullpower_wLCOE_ordered_NoSB <- totalData %>%
mutate(LCOE = LCOE * 1000) %>%  # Unit : $/kWh to $/MWh
arrange(desc(Generation)) %>%
arrange(LCOE) %>%
filter(Scenario == "No Setback") %>%
TypeToEng() %>%
mutate(LandType = factor(LandType, levels = rev(c("Industrial", "Logistics", "Residential", "Public", "Mountain", "Farmland", "Parking", "Water"))))
### 전체 ###
testGraph_YesSB <- rawData_fullpower_wLCOE_ordered_YesSB %>%
mutate(x1 = lag(cumsum(Generation)),
x2 = cumsum(Generation),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
testGraph_NoSB <- rawData_fullpower_wLCOE_ordered_NoSB %>%
mutate(x1 = lag(cumsum(Generation)),
x2 = cumsum(Generation),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=testGraph_YesSB, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=LandType), alpha=0.5, linewidth = 0.1) +
geom_rect(data=testGraph_NoSB, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=LandType), alpha=0.9, linewidth = 0.1) +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
geom_vline(xintercept = c(9*0.136*8760/1000), linetype = 'dashed')  # 경기도 9GW가 목표니까 그에 대응되는 발전량을 표시. # CF 적용할때 경기도 평균이 13.6% 였음.
rawData_fullpower_wLCOE_ordered_YesSB <- totalData %>%
mutate(LCOE = LCOE * 1000) %>%  # Unit : $/kWh to $/MWh
arrange(desc(Generation)) %>%
arrange(LCOE) %>%
filter(Scenario == "Current Setback") %>%
TypeToEng() %>%
mutate(LandType = factor(LandType, levels = rev(c("Residential", "Industrial", "Logistics", "Public", "Farmland", "Mountain", "Roadside", "Parking", "Water"))))
rawData_fullpower_wLCOE_ordered_NoSB <- totalData %>%
mutate(LCOE = LCOE * 1000) %>%  # Unit : $/kWh to $/MWh
arrange(desc(Generation)) %>%
arrange(LCOE) %>%
filter(Scenario == "No Setback") %>%
TypeToEng() %>%
mutate(LandType = factor(LandType, levels = rev(c("Residential", "Industrial", "Logistics", "Public", "Farmland", "Mountain", "Roadside", "Parking", "Water"))))
### 전체 ###
testGraph_YesSB <- rawData_fullpower_wLCOE_ordered_YesSB %>%
mutate(x1 = lag(cumsum(Generation)),
x2 = cumsum(Generation),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
testGraph_NoSB <- rawData_fullpower_wLCOE_ordered_NoSB %>%
mutate(x1 = lag(cumsum(Generation)),
x2 = cumsum(Generation),
y1 = 0,
y2 = LCOE) %>%
mutate(x1 = case_when(
is.na(x1) ~ 0,
TRUE ~ x1
))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=testGraph_YesSB, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=LandType), alpha=0.5, linewidth = 0.1) +
geom_rect(data=testGraph_NoSB, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=LandType), alpha=0.9, linewidth = 0.1) +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
geom_vline(xintercept = c(9*0.136*8760/1000), linetype = 'dashed')  # 경기도 9GW가 목표니까 그에 대응되는 발전량을 표시. # CF 적용할때 경기도 평균이 13.6% 였음.
ggplot(data = graphData , aes(x =  `Land Use Type`, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Geneartion (TWh)")
totalData_woID_mnpt_NoSB <- totalData_woID_mnpt %>%
filter(Scenario == 'No Setback')
totalData_woID_mnpt_YesSB <- totalData_woID_mnpt %>%
filter(Scenario == 'Current Setback')
totalData_woID_mnpt_Reduction_byLandType <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, Scenario, Generation) # Area, TC 등 추가하면 됨
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_byLandType) %>%
group_by(LandType, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
TypeToEng() %>%
#mutate(LandType = factor(LandType, levels = c("산지", "공동주택", "농지", "산업단지", "육상정수역", "공공건축물", "물류단지", "주차장"))) %>%
# mutate(LandType = factor(LandType, levels = c("Residential complex", "Mountainous area", "Industrial complex",
#                                               "Farmland",  "Water", "Public buildings", "Logistics complex", "Parking lot"))) %>%
mutate(LandType = factor(LandType, levels = c('Residential', "Industrial", "Water", "Farmland", "Mountain",
"Public", "Logistics", "Roadside", "Parking"))) %>%
mutate(Scenario = case_when(
Scenario == "Reduction" ~ "No Setback (Addtional amount)",
TRUE ~ Scenario
)) %>%
mutate(Scenario = factor(Scenario, levels = c("No Setback (Addtional amount)", "Current Setback"))) %>%
rename(`Land Use Type` = `LandType`)
ggplot(data = graphData , aes(x =  `Land Use Type`, y = Generation, fill = Scenario)) +
geom_bar(stat='identity') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
#axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Geneartion (TWh)")
graphData %>%
spread(key = Scenario, value = Generation) %>%
mutate(incRate = 100 * `No Setback (Addtional amount)` / c(`Current Setback`) )
totalData_woID_mnpt_Reduction_bySGG <- totalData_woID_mnpt_NoSB %>%
left_join(totalData_woID_mnpt_YesSB, by = c("LandType", "Technology", "SiGun", "setbackRegion")) %>%
mutate(Generation.x = Generation.x - Generation.y,
Scenario.x = 'Reduction') %>%
rename(Scenario = Scenario.x,
Area = Area.x,
Capacity = Capacity.x,
Generation = Generation.x,
TC = TC.x) %>%
select(LandType, SiGun, Scenario, Area, Capacity, Generation, TC) %>%
group_by(LandType, SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
## tempData : Reduction양을 LandType별로 색을 넣으려고, Scenario 칼럼에 '공공건축물' (Resid)단어를 넣을 예정.
totalData_woID_mnpt_Reduction_bySGG_graphData <- totalData_woID_mnpt_Reduction_bySGG %>%
TypeToEng() %>%
mutate(Scenario = LandType) %>%
select(-LandType)
## just get the order of factors in SiGun lists.
SGGorder_bySetbackGen <- totalData_woID_mnpt_YesSB %>%
group_by(SiGun) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
SGG_to_Eng() %>%
arrange(desc(Generation)) %>%
pull(SiGun)
graphData <- totalData_woID_mnpt_YesSB %>%
bind_rows(totalData_woID_mnpt_Reduction_bySGG_graphData) %>%
group_by(SiGun, Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup() %>%
SGG_to_Eng() %>%
mutate(SiGun = factor(SiGun, levels = SGGorder_bySetbackGen)) %>%
mutate(Scenario = factor(Scenario, levels = rev(c("Current Setback", "Farmland", "Mountain", "Residential", "Industrial", "Water", "Logistics",  "Public", 'Roadside',"Parking"))))
ggplot(data = graphData , aes(x =  SiGun, y = Generation, fill = Scenario)) +
geom_bar(stat='identity', color = 'black') +
#facet_wrap(~LandType, scales = 'free') +
theme(legend.position = "right",
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
#axis.text.x = element_blank(),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
text = element_text(size = 45)) +
#scale_fill_manual(values = c("palegreen3","palegreen4")) +
#scale_fill_brewer(palette = "Greens") +
ylab("Generation(TWh)")
graphData
View(graphData)
#graphData_forCheck <-
graphData %>%
group_by(Scenario) %>% summarize(Generation = sum(Generation))
#graphData_forCheck <-
graphData_LandTypeTotal_temp <- graphData %>%
group_by(Scenario) %>% summarize(Generation = sum(Generation)) %>% ungroup()
graphData %>%
left_join(graphData_LandTypeTotal_temp, by = Scenario)
graphData %>%
left_join(graphData_LandTypeTotal_temp, by = "Scenario")
graphData %>%
left_join(graphData_LandTypeTotal_temp, by = "Scenario") %>%
mutate(share = Generation.x / Generation.y)
graphData %>%
left_join(graphData_LandTypeTotal_temp, by = "Scenario") %>%
mutate(share = 100 * c(Generation.x / Generation.y))
graphData_sharebySGG_byLandType <- graphData %>%
left_join(graphData_LandTypeTotal_temp, by = "Scenario") %>%
mutate(share = 100 * c(Generation.x / Generation.y))
graphData_sharebySGG_byLandType
View(graphData_sharebySGG_byLandType)
graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Farmland')
View(graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Farmland'))
graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Farmland') %>%
arrange(desc(share))
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Farmland') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Logistics') %>%
arrange(desc(share))
graphDataVV
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Parking') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Roadside') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Public') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Logistics') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Water') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Industrial') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Residential') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Mountain') %>%
arrange(desc(share))
View(graphDataVV)
graphDataVV <- graphData_sharebySGG_byLandType %>%
filter(Scenario == 'Farmland') %>%
arrange(desc(share))
View(graphDataVV)
