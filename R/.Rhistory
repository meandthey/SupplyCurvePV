geom_bar(stat = 'identity', position = 'stack')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 0) +
geom_bar(stat = 'identity', position = 'stack')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 0) +
geom_bar(stat = 'identity', position = 'stack')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 0) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000)) +
geom_bar(stat = 'identity', position = 'dodge', binwidth = 0)
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000)) +
geom_bar(aes(binwidth = 0), stat = 'identity', position = 'dodge')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 0) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 10) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 10) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(~유형)
devtools::install_github("aj-sykes92/ggmacc")
devtools::install_github("aj-sykes92/ggmacc")
devtools::install_github("aj-sykes92/ggmacc")
library(ggmacc)
uk_agroforestry
social_cost_of_carbon <- 66.1
full_macc <- uk_agroforestry %>%
ggmacc(abatement = co2_tyear, mac = mac_gbp_tco2, fill = crop, cost_threshold = social_cost_of_carbon,
zero_line = TRUE, threshold_line = TRUE, threshold_fade = 0.3)
full_macc
setwd("C:/Users/DESKTOP/Desktop/[논문] 태양광 공급곡선/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(지역 = case_when(
지역 == "가평" ~ "가평군",
지역 == "고양" ~ "고양시",
지역 == "과천" ~ "과천시",
지역 == "광명" ~ "광명시",
지역 == "광주" ~ "광주시",
지역 == "구리" ~ "구리시",
지역 == "군포" ~ "군포시",
지역 == "김포" ~ "김포시",
지역 == "남양주" ~ "남양주시",
지역 == "동두천" ~ "동두천시",
지역 == "부천" ~ "부천시",
지역 == "성남" ~ "성남시",
지역 == "수원" ~ "수원시",
지역 == "시흥" ~ "시흥시",
지역 == "안산" ~ "안산시",
지역 == "안양" ~ "안양시",
지역 == "양주" ~ "양주시",
지역 == "양평" ~ "양평군",
지역 == "여주" ~ "여주시",
지역 == "연천" ~ "연천군",
지역 == "오산" ~ "오산시",
지역 == "용인" ~ "용인시",
지역 == "의왕" ~ "의왕시",
지역 == "의정부" ~ "의정부시",
지역 == "이천" ~ "이천시",
지역 == "파주" ~ "파주시",
지역 == "평택" ~ "평택시",
지역 == "포천" ~ "포천시",
지역 == "하남" ~ "하남시",
지역 == "화성" ~ "화성시",
지역 == "안성" ~ "안성시",
TRUE ~ 지역
))
return(target)
}
# AddSthNth <- function(data) {
#
#   colnames_data <- colnames(data)
#
#   dataSthNth <- data %>%
#     mutate(지역A = case_when(
#
#       지역 %in% c(SGG_South) ~ "경기남부",
#       지역 %in% c(SGG_North) ~ "경기북부",
#       TRUE ~ 'else'
#
#     )) %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   dataTotal <- data %>%
#     mutate(지역A = "전체") %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   outputData <- data %>% bind_rows(dataSthNth, dataTotal)
#
#   return(outputData)
#
# }
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(지역, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(지역) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## capacity factor (%) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
test <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("지역")) %>%
mutate(발전용량 = 면적 / coefficient * c(ratio / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-coefficient, -ratio, -이용률, -Units)
test_A <- test %>%
filter(이격거리 == 'N') %>%
mutate(유형_ID = paste0(유형, ID)) %>%
filter(유형 != '육상정수역')
ggplot(test_A, aes(x = 유형_ID, y = 면적)) +
geom_point()
#geom_hline(yintercept = 2.65, linetype = 'dashed', colour = 'gray', linewidth = 1.5) +
theme(text = element_text(size = 110),
axis.text.x = element_text(angle = 90),
legend.position = 'right',
axis.title.x = element_blank(),
axis.title.y = element_blank())
test_B <- test_A %>%
filter(유형 == '공공건축물',
ID <= 3)
ggplot(test_B, aes(x = 유형_ID, y = 면적, width = 발전량/100000), binwidth = 10) +
geom_bar(stat = 'identity', position = 'dodge') +
facet_grid(~유형)
#geom_hline(yintercept = 2.65, linetype = 'dashed', colour = 'gray', linewidth = 1.5) +
theme(text = element_text(size = 110),
axis.text.x = element_text(angle = 90),
legend.position = 'right',
axis.title.x = element_blank(),
axis.title.y = element_blank())
library(ggmacc)
full_macc <- uk_agroforestry %>%
ggmacc(abatement = co2_tyear, mac = mac_gbp_tco2, fill = crop, cost_threshold = social_cost_of_carbon,
zero_line = TRUE, threshold_line = TRUE, threshold_fade = 0.3)
social_cost_of_carbon <- 66.1
full_macc <- uk_agroforestry %>%
ggmacc(abatement = co2_tyear, mac = mac_gbp_tco2, fill = crop, cost_threshold = social_cost_of_carbon,
zero_line = TRUE, threshold_line = TRUE, threshold_fade = 0.3)
full_macc
uk_agroforestry
test
View(test)
head(rawData_full)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(ggmacc)
thous <- 10^(3)
mil <- 10^(6)
SGG_order <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시", "고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
SGG_order_W_SN <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시", "과천시", "경기남부",
"고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군", "연천군", "경기북부", "전체" )
SGG_South <- c("수원시", "용인시", "성남시", "부천시", "화성시", "안산시", "안양시", "평택시", "시흥시", "김포시",
"광주시", "광명시", "군포시", "하남시", "오산시", "이천시", "안성시", "의왕시", "양평군", "여주시",
"과천시")
SGG_North <- c("고양시", "남양주시", "파주시", "의정부시", "양주시", "구리시", "포천시", "동두천시", "가평군",
"연천군")
## makeFullname ##
makeFullname <- function(data) {
target <- data %>%
mutate(지역 = case_when(
지역 == "가평" ~ "가평군",
지역 == "고양" ~ "고양시",
지역 == "과천" ~ "과천시",
지역 == "광명" ~ "광명시",
지역 == "광주" ~ "광주시",
지역 == "구리" ~ "구리시",
지역 == "군포" ~ "군포시",
지역 == "김포" ~ "김포시",
지역 == "남양주" ~ "남양주시",
지역 == "동두천" ~ "동두천시",
지역 == "부천" ~ "부천시",
지역 == "성남" ~ "성남시",
지역 == "수원" ~ "수원시",
지역 == "시흥" ~ "시흥시",
지역 == "안산" ~ "안산시",
지역 == "안양" ~ "안양시",
지역 == "양주" ~ "양주시",
지역 == "양평" ~ "양평군",
지역 == "여주" ~ "여주시",
지역 == "연천" ~ "연천군",
지역 == "오산" ~ "오산시",
지역 == "용인" ~ "용인시",
지역 == "의왕" ~ "의왕시",
지역 == "의정부" ~ "의정부시",
지역 == "이천" ~ "이천시",
지역 == "파주" ~ "파주시",
지역 == "평택" ~ "평택시",
지역 == "포천" ~ "포천시",
지역 == "하남" ~ "하남시",
지역 == "화성" ~ "화성시",
지역 == "안성" ~ "안성시",
TRUE ~ 지역
))
return(target)
}
# AddSthNth <- function(data) {
#
#   colnames_data <- colnames(data)
#
#   dataSthNth <- data %>%
#     mutate(지역A = case_when(
#
#       지역 %in% c(SGG_South) ~ "경기남부",
#       지역 %in% c(SGG_North) ~ "경기북부",
#       TRUE ~ 'else'
#
#     )) %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   dataTotal <- data %>%
#     mutate(지역A = "전체") %>%
#     group_by(ID, 유형_full, 유형1, 유형2, 유형3, 유형4, 유형5, 유형6, 이격유형,
#              지역A, 시나리오) %>% summarize(면적 = sum(면적), 설비용량 = sum(설비용량), 연발전량 = sum(연발전량)) %>% ungroup() %>%
#     rename(지역 = 지역A) %>%
#     select(colnames_data)
#
#   outputData <- data %>% bind_rows(dataSthNth, dataTotal)
#
#   return(outputData)
#
# }
orderSGG_Wtotal <- function(data) {
targetData <- data %>%
arrange(factor(지역, levels = SGG_order_W_SN))
return(targetData)
}
writeExcel <- function(fileName, dataName, Name) {
wb <- loadWorkbook(fileName)
addWorksheet(wb, Name)
writeData(wb, Name, dataName)
saveWorkbook(wb, fileName, overwrite = TRUE)
}
## 필요면적: m2/kW, 시나리오:
rawData_prm <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "parameter", col_names = T, skip = 1)
## capacity factor (%) ##
rawData_cf <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "CF", col_names = T, skip = 1)
cf_bySGG <- rawData_cf %>%
group_by(지역) %>% summarize(이용률 = mean(이용률)) %>% ungroup() %>%
mutate(이용률 = round(이용률, digit = 2),
이용률 = 이용률 / 100,
Units = 'ratio')
cf_avg <- mean(cf_bySGG$이용률)
## capacity factor (%) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
i
i = 1
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData
LandList[i]
## capacity factor (%) ##
LandList <- excel_sheets("../data/totalData_individual.xlsx")[!excel_sheets("../data/totalData_individual.xlsx") %in% c("LCOE_byScale","LCOE_bySGG","parameter", "CF")]
getFullData <- function() {
FullData <- c()
for ( i in 1:length(LandList)) {
eachData <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = LandList[i], col_names = T)
eachData <- eachData %>%
mutate(이격거리 = case_when(
grepl("이격거리규제없음", LandList[i]) ~ "N",
TRUE ~ "Y"
))
FullData <- FullData %>%
bind_rows(eachData) %>%
makeFullname()
}
return(FullData)
}
rawData_full <- getFullData()
rawData_full
cf_bySGG
tail(cf_bySGG)
## capacity factor (%) ##
rawData_LCOE <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCEO_bySGG", col_names = T)
## capacity factor (%) ##
rawData_LCOE <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGG", col_names = T)
rawData_LCOE
## capacity factor (%) ##
rawData_LCOE <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGG", col_names = T)
rawData_LCOE
test
test <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("지역")) %>%
mutate(발전용량 = 면적 / coefficient * c(ratio / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-coefficient, -ratio, -이용률, -Units)
test
rawData_full
rawData_fullpower <- rawData_full %>%
left_join(rawData_prm, by = c("유형")) %>%
left_join(cf_bySGG, by = c("지역")) %>%
mutate(발전용량 = 면적 / coefficient * c(ratio / 100),
발전량 = 발전용량 * 이용률 * 8760) %>%
select(-coefficient, -ratio, -이용률, -Units)
head(rawData_LCOE)
rawData_LCOE_PV <- rawData_LCOE %>%
select(시군구_1, 시군구_2, 지상태양광, Units) %>%
rename(지역 = 시군구_1)
rawData_LCOE_PV
rawData_LCOE_PV <- rawData_LCOE %>%
select(시군구_1, 시군구_2, 지상태양광, Units)
rawData_LCOE_PV
rawData_LCOE
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, variable = LCOE)
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, variable = LCOE)
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = LCOE)
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE)
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE)
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, 시군구_2, technology, Units) %>% summarize(LCOE = average(LCOE))
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, 시군구_2, technology, Units) %>% summarize(LCOE = mean(LCOE))
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE))
rawData_LCOE %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>%
rename(지역 = 시군구_1)
## LCOE by technology (원/kWh) ##
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGG", col_names = T)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>%
rename(지역 = 시군구_1)
rawData_LCOE_bySGGTech_avg
head(rawData_fullpower)
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역"))
head(rawData_LCOE_bySGGTech_avg)
## LCOE by technology (원/kWh) ##
rawData_LCOE_bySGGTech <- readxl::read_excel("../data/totalData_individual.xlsx", sheet = "LCOE_bySGG", col_names = T)
rawData_LCOE_bySGGTech_avg <- rawData_LCOE_bySGGTech %>%
gather(-시군구_1, -시군구_2, -Units, key = technology, value = LCOE) %>%
group_by(시군구_1, technology, Units) %>% summarize(LCOE = mean(LCOE)) %>%
rename(지역 = 시군구_1)
rawData_LCOE_bySGGTech_avg
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology"))
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology")) -> ttt
View(ttt)
uk_agroforestry
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology"))
supplyCurve_test <- rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology"))
supplyCurve_test
uk_agroforestry
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology"))
rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology")) %>% filter(!is.na(LCOE))
supplyCurve_test <- rawData_fullpower %>%
left_join(rawData_LCOE_bySGGTech_avg, by = c("지역", "technology")) %>%
filter(!is.na(LCOE))
head(supplyCurve_test)
draw_supplyCurve_test <- supplyCurve_test %>%
ggmacc(abatement = 발전량, mac = LCOE, fill = 유형, cost_threshold = 100,
zero_line = TRUE, threshold_line = TRUE, threshold_fade = 0.3)
draw_supplyCurve_test
View(supplyCurve_test)
supplyCurve_test
?geom_macc
geom_macc
??geom_macc
geom_rect
df <- data.frame(name = c("Nixon", "Ford", "Carter", "Reagan", "Bush", "Clinton", "Bush", "Obama"),
start = as.Date(c("1969-01-20", "1974-08-09", "1977-01-20", "1981-01-20",
"1989-01-20", "1993-01-20", "2001-01-20", "2009-01-20")),
end = as.Date(c("1974-08-09", "1977-01-20", "1981-01-20", "1989-01-20",
"1993-01-20", "2001-01-20", "2009-01-20", "2017-01-20")),
party = c("R", "R", "D", "R", "R", "D", "R", "D"),
stringsAsFactors = FALSE) %>%
mutate(median_x = start + floor((end-start)/2))
df
p <- ggplot(economics, aes(x=date,y=unemploy)) +
geom_rect(data=df, aes(NULL,NULL,xmin=start,xmax=end,fill=party),
ymin=0,ymax=16000, colour="white", size=0.5, alpha=0.2) +
scale_fill_manual(values=c("R" = "red", "D" = "blue")) +
geom_line() +
geom_text(data=df,aes(x=median_x,y=3000,label=name), size=3) +
labs(title = "Unemmployment numbers since 1967",
y = "No. unemployed (x 1000)")
fig <- ggplotly(p)
install.packages("plotly")
library(ggplotly)
library(plotly)
df <- data.frame(name = c("Nixon", "Ford", "Carter", "Reagan", "Bush", "Clinton", "Bush", "Obama"),
start = as.Date(c("1969-01-20", "1974-08-09", "1977-01-20", "1981-01-20",
"1989-01-20", "1993-01-20", "2001-01-20", "2009-01-20")),
end = as.Date(c("1974-08-09", "1977-01-20", "1981-01-20", "1989-01-20",
"1993-01-20", "2001-01-20", "2009-01-20", "2017-01-20")),
party = c("R", "R", "D", "R", "R", "D", "R", "D"),
stringsAsFactors = FALSE) %>%
mutate(median_x = start + floor((end-start)/2))
p <- ggplot(economics, aes(x=date,y=unemploy)) +
geom_rect(data=df, aes(NULL,NULL,xmin=start,xmax=end,fill=party),
ymin=0,ymax=16000, colour="white", size=0.5, alpha=0.2) +
scale_fill_manual(values=c("R" = "red", "D" = "blue")) +
geom_line() +
geom_text(data=df,aes(x=median_x,y=3000,label=name), size=3) +
labs(title = "Unemmployment numbers since 1967",
y = "No. unemployed (x 1000)")
fig <- ggplotly(p)
fig
ggplotly(p)
p
supplyCurve_test
supplyCurve_test
#########################################################################################################################################################################################
d=data.frame(x1=c(1,3,1,5,4), x2=c(2,4,3,6,6), y1=c(1,1,4,1,3), y2=c(2,2,5,3,5), t=c('a','a','a','b','b'), r=c(1,2,3,4,5))
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=d, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=t), color="black", alpha=0.5) +
geom_text(data=d, aes(x=x1+(x2-x1)/2, y=y1+(y2-y1)/2, label=r), size=4) +
opts(title="geom_rect", plot.title=theme_text(size=40, vjust=1.5))
?opts
ggplot() +
scale_x_continuous(name="x") +
scale_y_continuous(name="y") +
geom_rect(data=d, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2, fill=t), color="black", alpha=0.5) +
geom_text(data=d, aes(x=x1+(x2-x1)/2, y=y1+(y2-y1)/2, label=r), size=4)
d
